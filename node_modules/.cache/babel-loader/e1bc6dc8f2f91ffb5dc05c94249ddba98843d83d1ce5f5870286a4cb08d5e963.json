{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/jogo-memoria-react/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport * as C from './App.styles';\nimport logoImage from './assets/devmemory_logo.png';\nimport restartIcon from './svgs/restart.svg';\nimport { Button } from './components/button';\nimport { InfoItem } from './components/infoItem';\nimport { GridItem } from './components/GridItem';\nimport { items } from './data/items';\nimport { formatTimeElapsed } from './helpers/formatTimeElapsed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [playng, setPlayng] = useState(false);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [movieCount, setMovieCount] = useState(0);\n  const [showCount, setShowCount] = useState(0);\n  const [gridItems, setGridItems] = useState([]);\n  useEffect(() => {\n    resetAndCreateGrid();\n  }, []);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      if (playng) {\n        setTimeElapsed(timeElapsed + 1);\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [playng, timeElapsed]);\n  useEffect(() => {\n    if (showCount === 2) {\n      let opened = gridItems.filter(item => item.shown === true);\n      if (opened.length === 2) {\n        let tempGrid = [...gridItems];\n        if (opened[0].item === opened[1].item) {\n          for (let i in tempGrid) {\n            if (tempGrid[i].shown) {\n              tempGrid[i].permanentShown = true;\n              tempGrid[i].shown = false;\n            }\n          }\n        } else {\n          for (let i in tempGrid) {\n            tempGrid[i].shown = false;\n          }\n        }\n        setGridItems(tempGrid);\n        setShowCount(0);\n        setMovieCount(movieCount => movieCount + 1);\n      }\n    }\n  }, [showCount, gridItems]);\n  const resetAndCreateGrid = () => {\n    setTimeElapsed(0);\n    setMovieCount(0);\n    setShowCount(0);\n    let tempGrid = [];\n    for (let i = 0; i < items.length * 2; i++) {\n      tempGrid.push({\n        item: null,\n        shown: false,\n        permanentShown: false\n      });\n    }\n    for (let w = 0; w < 2; w++) {\n      for (let i = 0; i < items.length; i++) {\n        let pos = -1;\n        while (pos < 0 || tempGrid[pos].item !== null) {\n          pos = Math.floor(Math.random() * (items.length * 2));\n        }\n        tempGrid[pos].item = i;\n      }\n    }\n    setGridItems(tempGrid);\n    setPlayng(true);\n  };\n  const handleItemClick = index => {\n    if (playng && index !== null && showCount < 2) {\n      let tempGrid = [...gridItems];\n      if (tempGrid[index].permanentShown === false && tempGrid[index].show === false) {\n        tempGrid[index].shown = true;\n        setShowCount(showCount + 1);\n      }\n      setGridItems(tempGrid);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(C.Container, {\n      children: [/*#__PURE__*/_jsxDEV(C.Info, {\n        children: [/*#__PURE__*/_jsxDEV(C.LogoLink, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logoImage,\n            width: \"200\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(C.InfoArea, {\n          children: [/*#__PURE__*/_jsxDEV(InfoItem, {\n            label: \"Tempo\",\n            value: formatTimeElapsed(timeElapsed)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n            label: \"Movimentos\",\n            value: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Reiniciar\",\n          icon: restartIcon,\n          onClick: resetAndCreateGrid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(C.GridArea, {\n        children: /*#__PURE__*/_jsxDEV(C.Grid, {\n          children: gridItems.map((item, index) => /*#__PURE__*/_jsxDEV(GridItem, {\n            item: item,\n            onClick: () => handleItemClick(index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"aim0lcLTxglZDj07Scc6CW7H7Xc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","C","logoImage","restartIcon","Button","InfoItem","GridItem","items","formatTimeElapsed","jsxDEV","_jsxDEV","App","_s","playng","setPlayng","timeElapsed","setTimeElapsed","movieCount","setMovieCount","showCount","setShowCount","gridItems","setGridItems","resetAndCreateGrid","timer","setInterval","clearInterval","opened","filter","item","shown","length","tempGrid","i","permanentShown","push","w","pos","Math","floor","random","handleItemClick","index","show","children","Container","Info","LogoLink","src","width","alt","fileName","_jsxFileName","lineNumber","columnNumber","InfoArea","label","value","icon","onClick","GridArea","Grid","map","_c","$RefreshReg$"],"sources":["/opt/lampp/htdocs/jogo-memoria-react/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport * as C from './App.styles'\nimport logoImage from './assets/devmemory_logo.png'\nimport restartIcon from './svgs/restart.svg'\nimport { Button } from './components/button'\nimport { InfoItem } from './components/infoItem'\nimport { GridItemType } from './types/GridItemType'\nimport { GridItem } from './components/GridItem'\nimport { items } from './data/items'\nimport { formatTimeElapsed } from './helpers/formatTimeElapsed'\n\nconst App = () => {\n\tconst [playng, setPlayng] = useState<boolean>(false)\n\tconst [timeElapsed, setTimeElapsed] = useState<number>(0)\n\tconst [movieCount, setMovieCount] = useState<number>(0)\n\tconst [showCount, setShowCount] = useState<number>(0)\n\tconst [gridItems, setGridItems] = useState<GridItemType[]>([])\n\n\tuseEffect(() => {\n\t\tresetAndCreateGrid()\n\t}, [])\n\n\tuseEffect(() => {\n\t\tconst timer = setInterval(() => {\n\t\t\tif (playng) {\n\t\t\t\tsetTimeElapsed(timeElapsed + 1)\n\t\t\t}\n\t\t}, 1000)\n\t\treturn () => clearInterval(timer)\n\t}, [playng, timeElapsed])\n\n\tuseEffect(() => {\n\t\tif (showCount === 2) {\n\t\t\tlet opened = gridItems.filter(item => item.shown === true)\n\t\t\tif (opened.length === 2) {\n\t\t\t\tlet tempGrid = [...gridItems]\n\t\t\t\tif (opened[0].item === opened[1].item) {\n\t\t\t\t\tfor(let i in tempGrid) {\n\t\t\t\t\t\tif (tempGrid[i].shown) {\n\t\t\t\t\t\t\ttempGrid[i].permanentShown = true\n\t\t\t\t\t\t\ttempGrid[i].shown = false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor(let i in tempGrid) {\n\t\t\t\t\t\ttempGrid[i].shown = false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetGridItems(tempGrid)\n\t\t\t\tsetShowCount(0)\n\t\t\t\tsetMovieCount(movieCount => movieCount + 1)\n\t\t\t}\n\t\t}\n\t}, [showCount, gridItems])\n\n\tconst resetAndCreateGrid = () => {\n\t\tsetTimeElapsed(0)\n\t\tsetMovieCount(0)\n\t\tsetShowCount(0)\n\n\t\tlet tempGrid: GridItemType[] = []\n\n\t\tfor(let i = 0; i < (items.length * 2); i++) {\n\t\t\ttempGrid.push({\n\t\t\t\titem: null,\n\t\t\t\tshown: false,\n\t\t\t\tpermanentShown: false\n\t\t\t})\n\t\t}\n\n\t\tfor(let w = 0; w < 2; w++) {\n\t\t\tfor(let i = 0; i < (items.length); i++) {\n\t\t\t\tlet pos = -1\n\t\t\t\twhile(pos < 0 || tempGrid[pos].item !== null) {\n\t\t\t\t\tpos = Math.floor(Math.random() * (items.length * 2))\n\t\t\t\t}\n\t\t\t\ttempGrid[pos].item = i\n\t\t\t}\n\t\t}\n\n\t\tsetGridItems(tempGrid)\n\n\t\tsetPlayng(true)\n\t}\n\n\tconst handleItemClick = (index: number) => {\n\t\tif (playng && index !== null && showCount < 2) {\n\t\t\tlet tempGrid = [...gridItems]\n\t\t\tif (tempGrid[index].permanentShown === false && tempGrid[index].show === false) {\n\t\t\t\ttempGrid[index].shown = true\n\t\t\t\tsetShowCount(showCount + 1)\n\t\t\t}\n\t\t\tsetGridItems(tempGrid)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<C.Container>\n\t\t\t\t<C.Info>\n\t\t\t\t\t<C.LogoLink>\n\t\t\t\t\t\t<img src={logoImage} width=\"200\" alt=\"\" />\n\t\t\t\t\t</C.LogoLink>\n\t\t\t\t\t<C.InfoArea>\n\t\t\t\t\t\t<InfoItem label='Tempo' value={formatTimeElapsed(timeElapsed)} />\n\t\t\t\t\t\t<InfoItem label='Movimentos' value='0' />\n\t\t\t\t\t</C.InfoArea>\n\t\t\t\t\t<Button label='Reiniciar' icon={restartIcon} onClick={resetAndCreateGrid} />\n\t\t\t\t</C.Info>\n\t\t\t\t<C.GridArea>\n\t\t\t\t\t<C.Grid>\n\t\t\t\t\t\t{gridItems.map((item, index) => (\n\t\t\t\t\t\t\t<GridItem key={index} item={item} onClick={() => handleItemClick(index)} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</C.Grid>\n\t\t\t\t</C.GridArea>\n\t\t\t</C.Container>\n\t\t</div>\n\t)\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}